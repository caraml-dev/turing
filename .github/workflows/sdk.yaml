name: sdk

on:
  # Automatically run CI on Release and Pre-Release tags and main branch
  # (only if there are changes to relevant paths)
  push:
    tags:
      - "sdk/v[0-9]+.[0-9]+.[0-9]+*"
    branches:
      - main
    paths:
      - ".github/workflows/sdk.yaml"
      - "sdk/**"

  # Automatically run CI on branches, that have active PR opened
  pull_request:
    branches:
      - main
      - upgrade-knative
    paths:
      - ".github/workflows/sdk.yaml"
      - "sdk/**"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    
    defaults:
      run:
        working-directory: ./sdk
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: |
            pip-${{ hashFiles('sdk/requirements.txt') }}-${{ hashFiles('sdk/requirements.dev.txt') }}-${{ matrix.python-version }}
          restore-keys: pip-

      - name: Install dependencies
        run: make setup

      - name: Run unit tests
        run: make test

  release-rules:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.release-rules.outputs.release-type }}
    steps:
      - uses: actions/checkout@v2
      - id: release-rules
        uses: ./.github/actions/release-rules
        with:
          prefix: sdk/

  publish:
    # Automatically publish release and pre-release artifacts.
    #
    # Dev builds can be released from the 'main' branch by
    # approving 'deployment' into the 'manual' environment
    if: >-
      contains('release,pre-release', needs.release-rules.outputs.release-type)
        || ( github.event_name != 'pull_request' )
        || ( github.event.pull_request.head.repo.full_name == github.repository )
    runs-on: ubuntu-latest
    needs:
      - release-rules
      - test
    environment: ${{ needs.release-rules.outputs.release-type == 'dev' && 'manual' || '' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          # fetch full history for a proper version number assignment
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: |
            pip-${{ hashFiles('sdk/requirements.txt') }}-${{ hashFiles('sdk/requirements.dev.txt') }}
          restore-keys: pip-

      - name: Build
        working-directory: ./sdk
        run: |
          make setup
          make build

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: sdk/dist
