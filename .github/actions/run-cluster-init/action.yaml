name: Run Cluster Init
description: Set up Turing Cluster Init

inputs:
  cluster_name: 
    required: true
    description: 'Name of Cluster'
    default: ''
  istio_version:
    required: true
    description: 'Istio Version'
    default: ''
  knative_version:
    required: true
    description: 'Knative Version'
    default: ''
  knative_istio_version:
    required: true
    description: 'Knative Istio Version'
    default: ''
  local_registry:
    required: true
    description: 'Endpoint of local registry'
    default: ''
  cluster_init_version:
    required: true
    description: 'Version of cluster to install, tar file has to follow naming - cluster-init.(CLUSTER_INIT_VERSION).tar '
    default: ''

runs:
  using: composite
  steps:
    - name: "Setup local k8s cluster"
      uses: AbsaOSS/k3d-action@v2.0.0
      with:
        cluster-name: ${{ inputs.cluster_name }}
        args: >-
          --servers 1
          --agents 3
          --port 80:80@agent:*
          --registry-create ${{inputs.local_registry}}
          --k3s-arg "--no-deploy=traefik,metrics-server@server:*"

    - name: Publish images to local registry
      env:
        DOCKER_REPOSITORY: ${{ inputs.local_registry }}/${{ github.repository }}
        CLUSTER_INIT_VERSION: ${{ inputs.cluster_init_version }}
      shell: bash
      run: |
        # Cluster init
        docker image load --input cluster-init.${{ env.CLUSTER_INIT_VERSION }}.tar
        docker tag \
          cluster-init:${{ env.CLUSTER_INIT_VERSION }} \
          ${{ env.DOCKER_REPOSITORY }}/cluster-init:${{ env.CLUSTER_INIT_VERSION }}
        docker push ${{ env.DOCKER_REPOSITORY }}/cluster-init:${{ env.CLUSTER_INIT_VERSION }}

    - name: Install Infrastructure
      env:
        CLUSTER_INIT_VERSION: ${{ inputs.cluster_init_version }}
      shell: bash
      run: |
        kubectl create ns infrastructure
        helm upgrade turing-init infra/charts/turing-init \
          --namespace infrastructure \
          --set image.registry=${{ inputs.local_registry }}/ \
          --set image.repository=${{ github.repository }}/cluster-init \
          --set image.tag=${{ env.CLUSTER_INIT_VERSION }} \
          --set knative.domains="127.0.0.1.nip.io" \
          --set knative.registriesSkippingTagResolving=${{ inputs.local_registry }} \
          --install \
          --wait

        # wait for install infra job to finish
        kubectl logs -n infrastructure -f $(kubectl get pod --namespace infrastructure | grep -v 'NAME' | grep -v 'spark' | head -n 1 | awk '{print $1}')
        kubectl get pod --all-namespaces
        kubectl get svc --all-namespaces
        kubectl wait -n infrastructure --for=condition=complete --timeout=10m job/turing-init-spark-operator-webhook-init
        # Might fail the first time but the 2nd run should work, rarely fails on the first try though.
        kubectl wait -n infrastructure --for=condition=complete --timeout=10m job/turing-init-init
