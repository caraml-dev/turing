# This values.yaml file provides default configuration for Turing Helm chart. 
# It is also currently used to generate README.md using helm-docs
# https://github.com/norwoodj/helm-docs

turing:
  image:
    # -- Docker registry for Turing API image. User is required to override
    # the registry for now as there is no publicly available Turing image
    registry: docker.io/
    # -- Docker image repository for Turing API
    repository: turing
    # -- Docker image tag for Turing API
    tag: latest
  # -- Resources requests and limits for Turing API. This should be set 
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: {}
  livenessProbe:
    # -- HTTP path for liveness check
    path: "/v1/internal/live"
  readinessProbe:
    # -- HTTP path for readiness check
    path: "/v1/internal/ready"
  service:
    # -- Turing API Kubernetes service port number
    externalPort: 8080
    # -- Turing API container port number
    internalPort: 8080
  config:
    deployment:
      # -- Maximum wait duration to create or update Turing router
      timeout: 3m
      # -- Maximum wait duration to delete Turing router
      deletionTimeout: 30s
      # -- Google Cloud Project ID associcated with Turing router
      gcpProject: ""
      # -- Environment name associated with Turing router
      environmentType: id-dev
      # -- Hard limit on the maximum CPU Turing router can request
      maxCPU: "8"
      # -- Hard limit on the maximum memory Turing router can request
      maxMemory: "8Gi"
    router:
      image:
        # -- Docker registry for Turing router image. User is expected to override
        # the registry for now as there is no publicly available Turing image
        registry: docker.io/
        # -- Docker image repository for Turing router
        repository: turing-router
        # -- Docker image tag for Turing router
        tag: latest
      # -- Log level for Turing router
      logLevel: DEBUG
      # -- Enable debugging for Fiber library used by Turing router
      fiberDebugLog: true
      # -- Enable custom metrics
      customMetrics: true
      jaeger:
        # -- Enable Jaeger tracing
        enabled: false
        # -- Jaeger tracing collector endpoint 
        collectorEndpoint: 
      fluentd:
        # -- Docker image for Fluentd log forwarder. User is expected to specify
        # the Fluentd image for now as there is no publicly available image. 
        # Currently this is required only if users needs to save Turing logs
        # in BigQuery.
        image:
        # -- How often should Fluentd flush the buffered log
        flushIntervalSeconds: 90
    authorization:
      # -- Enable authorization middleware in Turing API
      enabled: false
      # -- Authorization server URL
      serverURL: 
    sentry:
      # -- Enable integration with Sentry application monitoring https://sentry.io
      enabled: false
      # -- Data source name for the Sentry project 
      dsn:
    newrelic:
      # -- Enable integrarion with New Relic application monitoring https://newrelic.com
      enabled: false
      # -- Application name monitored in New Relic
      appname: 
    vault:
      # -- Vault server address (required)
      address: 
      # -- Vault authentication token (required)
      token: 
    encryption:
      # -- Encryption key used by Turing to secure sensitive values (required)
      key:
    merlin:
      # -- Merlin API endpoint (required). Reference: https://github.com/gojek/merlin
      endpoint:
    mlp:
      # -- MLP API endpoint(required). Reference: https://github.com/gojek/mlp
      endpoint:
      encryption:
        # -- Encryption key used by MLP to secure sensitive values (required)
        key: 
    alert:
      # -- Enable alerting in Turing
      enabled: false
      # -- GitLab server URL for GitOps based alerting
      gitlabBaseurl:
      # -- GitLab project ID
      gitlabProjectid:
      # -- GitLab branch to commit the alert configuration file
      gitlabBranch:
      # -- GitLab path prefix within the project to save the alert configuration file
      gitlabPathprefix:
      # -- GitLab token to authentication API request to GitLab
      gitlabToken:
    serviceAccount:
      # -- Enable usage of Google Cloud service account JSON key
      enabled: false
      # -- Secret name for Google Cloud service account JSON key
      secretName: 
      # -- Secret key for Google Cloud service account JSON key
      secretKey:
    ingress:
      # -- Enable ingress to provision Ingress resource for external access
      # to Turing API 
      enabled: false

dbMigrations:
  image:
    # -- Docker tag for golang-migrate Docker image https://hub.docker.com/r/migrate/migrate
    tag: v4.7.1

swaggerUi:
  # -- Docker tag for Swagger UI https://hub.docker.com/r/swaggerapi/swagger-ui
  image:
    tag: v3.24.3
  # -- Host for the Swagger UI
  apiHost: "127.0.0.1"
  # -- Base URL path to serve the Swagger UI
  basePath: "/v1"
  service:
    # -- Swagger UI container port number
    internalPort: 8081
    # -- Swagger UI Kubernetes service port number
    externalPort: 8080

postgresql:
  # -- Resources requests and limits for Turing database. This should be set 
  # according to your cluster capacity and service level objectives.
  # Reference: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: {}
  persistence:
    # -- Persist Postgresql data in a Persistent Volume Claim 
    enabled: true
  # -- Database name for Turing Postgresql database
  postgresqlDatabase: turing
  # -- Username for Turing Postgresql database
  postgresqlUsername: turing
  # -- Password for Turing Postgresql database (required)
  postgresqlPassword:
