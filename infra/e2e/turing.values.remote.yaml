clusterConfig:
  useInClusterConfig: false

config:
  ClusterConfig:
    EnsemblingServiceK8sConfig: {}

merlin:
  authorization:
    enabled: false
  environmentConfigs:
    - name: "dev"
      is_default: true
      cluster: "dev"
      region: "id"
      gcp_project: "gcp-project"
      deployment_timeout: "10m"
      namespace_timeout: "2m"
      max_cpu: "8"
      max_memory: "8Gi"
      queue_resource_percentage: "20"
      is_prediction_job_enabled: false
      is_default_prediction_job: true
      default_prediction_job_config:
        executor_replica: 3
        driver_cpu_request: "2"
        driver_memory_request: "2Gi"
        executor_cpu_request: "2"
        executor_memory_request: "2Gi"
      default_deployment_config:
        min_replica: 0
        max_replica: 1
        cpu_request: "100m"
        memory_request: "200Mi"
      default_transformer_config:
        min_replica: 0
        max_replica: 1
        cpu_request: "100m"
        memory_request: "200Mi"
  imageBuilder:
    serviceAccount:
      create: true
      name: "kaniko"
      annotations: {}
      labels: {}
    clusterName: "dev"
    baseImages:
      3.7.*:
        imageName: pyfunc-py37:v0.27.0
        dockerfilePath: "docker/Dockerfile"
        buildContextURI: "git://github.com/gojek/merlin.git#refs/tags/v0.27.0"
        mainAppPath: /merlin-spark-app/main.py
    predictionJobBaseImages:
      3.7.*:
        imageName: pyspark-py37:v0.27.0
        dockerfilePath: "docker/app.Dockerfile"
        buildContextURI: "git://github.com/gojek/merlin.git#refs/tags/v0.27.0"
        mainAppPath: /merlin-spark-app/main.py
    predictionJobContextSubPath: "python/batch-predictor"
    namespace: "mlp"
    dockerRegistry: "dockerRegistry"
    timeout: "10m"
    retention: "48h"
    kanikoImage: "gcr.io/kaniko-project/executor:v1.6.0"
    resources:
      requests:
        cpu: "1"
        memory: 512Mi
      limits:
        cpu: "1"
        memory: 1Gi
    maxRetry: 3
    safeToEvict: false
  transformer:
    image: ghcr.io/caraml-dev/merlin-transformer:0.27.0
  ingress:
    enabled: true
    class: istio
    path: /
  mlflow:
    trackingURL: "http://merlin-mlflow"
    resources:
      requests:
        cpu: 25m
        memory: 64Mi
    artifactRoot: s3://mlflow
    ingress:
      enabled: true
      class: istio
      path: /
    extraEnvs:
      AWS_ACCESS_KEY_ID: YOURACCESSKEY
      AWS_SECRET_ACCESS_KEY: YOURSECRETKEY
      AWS_DEFAULT_REGION: ap-southeast-2
      MLFLOW_S3_ENDPOINT_URL: http://minio.minio.svc.cluster.local:9000
  mlp:
    enabled: false
  swagger:
    enabled: false
