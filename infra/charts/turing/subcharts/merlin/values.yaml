global:
  merlin: {}

image:
  pullPolicy: IfNotPresent
  registry: ghcr.io
  repository: gojek/merlin
  tag: v0.9.1
replicaCount: "1"
resources:
  requests:
    cpu: "500m"
    memory: 1Gi
  limits:
    cpu: "1"
    memory: 1Gi
service:
  externalPort: 8080
  internalPort: 8080
ingress:
  enabled: false
  # -- Whether to use networking.k8s.io/v1 (k8s version >= 1.19) or networking.k8s.io/v1beta1 (1.16 >= k8s version >= 1.22)
  useV1Beta1: false

environment: dev
homepage: /merlin
apiHost: http://merlin.mlp/v1
docsURL: "https://github.com/gojek/merlin/blob/main/docs/getting-started/README.md"

# Comma-separated value of Docker registries that can be chosen in deployment page
dockerRegistries: docker.io,ghcr.io/gojek

mlpApi:
  apiHost: http://mlp.mlp:8080/v1
  # encryptionKey must be specified using --set flag.
  encryptionKey: ""

imageBuilder:
  clusterName: "dev"
  buildContextURI: "git://TOKEN@github.com/gojek/merlin.git#refs/tags/v0.1"
  baseImage: ""
  dockerfilePath: "./Dockerfile"
  predictionJobBuildContextURI: "git://TOKEN@github.com/gojek/merlin.git#refs/tags/v0.1"
  predictionJobBaseImage: "gojek/mlp/merlin-pyspark:v0.4.1"
  predictionJobDockerfilePath: "docker/app.Dockerfile"
  namespace: "mlp"
  dockerRegistry: "gojek"
  timeout: "30m"
  contextSubPath: "python/pyfunc-server"
  predictionJobContextSubPath: "python/batch-predictor"

vault:
  enabled: true
  server:
    dev:
      enabled: true
    postStart:
      - /bin/sh
      - -c
      - >-
        sleep 5 &&
          vault secrets disable secret/ &&
          vault secrets enable -path=secret -version=1 kv
  secretName: "vault-secret"

alert:
  enabled: false
  gitlab:
    baseURL: https://gitlab.com/
    # GitLab token must be specified using --set flag.
    # token:
    dashboardRepository: data-science/slo-specs
    dashboardBranch: master
    alertRepository: lens/artillery/datascience
    alertBranch: master
  warden:
    apiHost: ""

monitoring:
  enabled: false
  baseURL: ""
  jobBaseURL: ""

# Google service account used to access GCP's resources.
#
# gcpServiceAccount:
#   secretName: merlin-secret
#   secretKey: service-account.json

environmentConfigs:
  - name: "dev"
    is_default: true
    cluster: "dev"
    region: "id"
    gcp_project: "gcp-project"
    deployment_timeout: "10m"
    namespace_timeout: "2m"
    min_replica: 0
    max_replica: 1
    max_cpu: "8"
    max_memory: "8Gi"
    cpu_request: "100m"
    memory_request: "200Mi"
    cpu_limit: "400m"
    memory_limit: "500Mi"
    queue_resource_percentage: "20"
    is_prediction_job_enabled: true
    is_default_prediction_job: true
    prediction_job_config:
      executor_replica: 3
      driver_cpu_request: "2"
      driver_memory_request: "2Gi"
      executor_cpu_request: "2"
      executor_memory_request: "2Gi"

sentry:
  enabled: false
  dsn: ""

newrelic:
  enabled: false
  appname: "merlin-api-dev"
  licenseSecretName: "newrelic-license-secret"

authorization:
  enabled: false
  serverUrl: http://mlp-authorization-keto

mlflow:
  image:
    registry: ghcr.io
    repository: gojek/mlflow
    tag: 1.3.0
  artifactRoot: gs://bucket-name/mlflow
  postgresql:
    enabled: false
    postgresqlDatabase: mlflow
    postgresqlUsername: mlflow

postgresql:
  resources:
    requests:
      memory: 256Mi
      cpu: 500m
  persistence:
    enabled: true
    size: 10Gi
  postgresqlUsername: merlin
  postgresqlDatabase: merlin
  postgresqlPassword: merlin
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  replication:
    enabled: false
    user: repl_user
    password: repl_password
    slaveReplicas: 2
    ## Set synchronous commit mode: on, off, remote_apply, remote_write and local
    ## ref: https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-WAL-LEVEL
    synchronousCommit: "on"
    ## From the number of `slaveReplicas` defined above, set the number of those that will have synchronous replication
    ## NOTE: It cannot be > slaveReplicas
    numSynchronousReplicas: 2
    ## Replication Cluster application name. Useful for defining multiple replication policies
    applicationName: merlin

swagger:
  enabled: false
  image:
    tag: v3.23.5
  apiHost: "merlin.dev"
  basePath: "/api/merlin/v1"
  service:
    internalPort: 8080
    externalPort: 8080
