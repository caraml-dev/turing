// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	json "encoding/json"

	"github.com/gojek/turing/engines/experiment/manager"
	mock "github.com/stretchr/testify/mock"
)

// CustomExperimentManager is an autogenerated mock type for the CustomExperimentManager type
type CustomExperimentManager struct {
	mock.Mock
}

// GetEngineInfo provides a mock function with given fields:
func (_m *CustomExperimentManager) GetEngineInfo() manager.Engine {
	ret := _m.Called()

	var r0 manager.Engine
	if rf, ok := ret.Get(0).(func() manager.Engine); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(manager.Engine)
	}

	return r0
}

// GetExperimentRunnerConfig provides a mock function with given fields: _a0
func (_m *CustomExperimentManager) GetExperimentRunnerConfig(_a0 interface{}) (json.RawMessage, error) {
	ret := _m.Called(_a0)

	var r0 json.RawMessage
	if rf, ok := ret.Get(0).(func(interface{}) json.RawMessage); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(json.RawMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ValidateExperimentConfig provides a mock function with given fields: _a0
func (_m *CustomExperimentManager) ValidateExperimentConfig(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
