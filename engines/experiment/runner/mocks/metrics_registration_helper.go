// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	instrumentation "github.com/caraml-dev/turing/engines/router/missionctl/instrumentation"
	mock "github.com/stretchr/testify/mock"
)

// MetricsRegistrationHelper is an autogenerated mock type for the MetricsRegistrationHelper type
type MetricsRegistrationHelper struct {
	mock.Mock
}

// Register provides a mock function with given fields: metrics
func (_m *MetricsRegistrationHelper) Register(metrics []instrumentation.Metric) error {
	ret := _m.Called(metrics)

	var r0 error
	if rf, ok := ret.Get(0).(func([]instrumentation.Metric) error); ok {
		r0 = rf(metrics)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMetricsRegistrationHelper interface {
	mock.TestingT
	Cleanup(func())
}

// NewMetricsRegistrationHelper creates a new instance of MetricsRegistrationHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMetricsRegistrationHelper(t mockConstructorTestingTNewMetricsRegistrationHelper) *MetricsRegistrationHelper {
	mock := &MetricsRegistrationHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
