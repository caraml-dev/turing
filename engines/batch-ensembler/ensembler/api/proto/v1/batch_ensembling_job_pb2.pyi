"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class BatchEnsemblingJob(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _JobKind(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[JobKind.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        BatchEnsemblingJob = BatchEnsemblingJob.JobKind.V(0)
    class JobKind(metaclass=_JobKind):
        V = typing.NewType('V', builtins.int)
    BatchEnsemblingJob = BatchEnsemblingJob.JobKind.V(0)

    VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    version: typing.Text = ...
    kind: global___BatchEnsemblingJob.JobKind.V = ...

    @property
    def metadata(self) -> global___BatchEnsemblingJobMetadata: ...

    @property
    def spec(self) -> global___BatchEnsemblingJobSpec: ...

    def __init__(self,
        *,
        version : typing.Text = ...,
        kind : global___BatchEnsemblingJob.JobKind.V = ...,
        metadata : typing.Optional[global___BatchEnsemblingJobMetadata] = ...,
        spec : typing.Optional[global___BatchEnsemblingJobSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"metadata",b"metadata",u"spec",b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"kind",b"kind",u"metadata",b"metadata",u"spec",b"spec",u"version",b"version"]) -> None: ...
global___BatchEnsemblingJob = BatchEnsemblingJob

class BatchEnsemblingJobMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...

        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...

    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...

    def __init__(self,
        *,
        name : typing.Text = ...,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"annotations",b"annotations",u"name",b"name"]) -> None: ...
global___BatchEnsemblingJobMetadata = BatchEnsemblingJobMetadata

class BatchEnsemblingJobSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PredictionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...

        @property
        def value(self) -> global___PredictionSource: ...

        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___PredictionSource] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    SOURCE_FIELD_NUMBER: builtins.int
    PREDICTIONS_FIELD_NUMBER: builtins.int
    ENSEMBLER_FIELD_NUMBER: builtins.int
    SINK_FIELD_NUMBER: builtins.int

    @property
    def source(self) -> global___Source: ...

    @property
    def predictions(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___PredictionSource]: ...

    @property
    def ensembler(self) -> global___Ensembler: ...

    @property
    def sink(self) -> global___Sink: ...

    def __init__(self,
        *,
        source : typing.Optional[global___Source] = ...,
        predictions : typing.Optional[typing.Mapping[typing.Text, global___PredictionSource]] = ...,
        ensembler : typing.Optional[global___Ensembler] = ...,
        sink : typing.Optional[global___Sink] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"ensembler",b"ensembler",u"sink",b"sink",u"source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"ensembler",b"ensembler",u"predictions",b"predictions",u"sink",b"sink",u"source",b"source"]) -> None: ...
global___BatchEnsemblingJobSpec = BatchEnsemblingJobSpec

class Source(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATASET_FIELD_NUMBER: builtins.int
    JOIN_ON_FIELD_NUMBER: builtins.int
    join_on: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...

    @property
    def dataset(self) -> global___Dataset: ...

    def __init__(self,
        *,
        dataset : typing.Optional[global___Dataset] = ...,
        join_on : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"dataset",b"dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dataset",b"dataset",u"join_on",b"join_on"]) -> None: ...
global___Source = Source

class Dataset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DatasetType(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DatasetType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        BQ = Dataset.DatasetType.V(0)
    class DatasetType(metaclass=_DatasetType):
        V = typing.NewType('V', builtins.int)
    BQ = Dataset.DatasetType.V(0)

    class BigQueryDatasetConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class OptionsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...

            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

        TABLE_FIELD_NUMBER: builtins.int
        FEATURES_FIELD_NUMBER: builtins.int
        QUERY_FIELD_NUMBER: builtins.int
        OPTIONS_FIELD_NUMBER: builtins.int
        table: typing.Text = ...
        features: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...
        query: typing.Text = ...

        @property
        def options(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...

        def __init__(self,
            *,
            table : typing.Text = ...,
            features : typing.Optional[typing.Iterable[typing.Text]] = ...,
            query : typing.Text = ...,
            options : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"features",b"features",u"options",b"options",u"query",b"query",u"table",b"table"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    BQ_CONFIG_FIELD_NUMBER: builtins.int
    type: global___Dataset.DatasetType.V = ...

    @property
    def bq_config(self) -> global___Dataset.BigQueryDatasetConfig: ...

    def __init__(self,
        *,
        type : global___Dataset.DatasetType.V = ...,
        bq_config : typing.Optional[global___Dataset.BigQueryDatasetConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"bq_config",b"bq_config",u"config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"bq_config",b"bq_config",u"config",b"config",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"config",b"config"]) -> typing_extensions.Literal["bq_config"]: ...
global___Dataset = Dataset

class PredictionSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATASET_FIELD_NUMBER: builtins.int
    JOIN_ON_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    join_on: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...
    columns: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...

    @property
    def dataset(self) -> global___Dataset: ...

    def __init__(self,
        *,
        dataset : typing.Optional[global___Dataset] = ...,
        join_on : typing.Optional[typing.Iterable[typing.Text]] = ...,
        columns : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"dataset",b"dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"columns",b"columns",u"dataset",b"dataset",u"join_on",b"join_on"]) -> None: ...
global___PredictionSource = PredictionSource

class Ensembler(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ResultType(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ResultType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DOUBLE = Ensembler.ResultType.V(0)
        FLOAT = Ensembler.ResultType.V(1)
        INTEGER = Ensembler.ResultType.V(2)
        LONG = Ensembler.ResultType.V(3)
        STRING = Ensembler.ResultType.V(4)
        ARRAY = Ensembler.ResultType.V(10)
    class ResultType(metaclass=_ResultType):
        V = typing.NewType('V', builtins.int)
    DOUBLE = Ensembler.ResultType.V(0)
    FLOAT = Ensembler.ResultType.V(1)
    INTEGER = Ensembler.ResultType.V(2)
    LONG = Ensembler.ResultType.V(3)
    STRING = Ensembler.ResultType.V(4)
    ARRAY = Ensembler.ResultType.V(10)

    class Result(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        COLUMN_NAME_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        ITEM_TYPE_FIELD_NUMBER: builtins.int
        column_name: typing.Text = ...
        type: global___Ensembler.ResultType.V = ...
        item_type: global___Ensembler.ResultType.V = ...

        def __init__(self,
            *,
            column_name : typing.Text = ...,
            type : global___Ensembler.ResultType.V = ...,
            item_type : global___Ensembler.ResultType.V = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"column_name",b"column_name",u"item_type",b"item_type",u"type",b"type"]) -> None: ...

    URI_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...

    @property
    def result(self) -> global___Ensembler.Result: ...

    def __init__(self,
        *,
        uri : typing.Text = ...,
        result : typing.Optional[global___Ensembler.Result] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"result",b"result",u"uri",b"uri"]) -> None: ...
global___Ensembler = Ensembler

class Sink(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SinkType(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SinkType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CONSOLE = Sink.SinkType.V(0)
        BQ = Sink.SinkType.V(1)
    class SinkType(metaclass=_SinkType):
        V = typing.NewType('V', builtins.int)
    CONSOLE = Sink.SinkType.V(0)
    BQ = Sink.SinkType.V(1)

    class _SaveMode(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SaveMode.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ERRORIFEXISTS = Sink.SaveMode.V(0)
        OVERWRITE = Sink.SaveMode.V(1)
        APPEND = Sink.SaveMode.V(2)
        IGNORE = Sink.SaveMode.V(3)
    class SaveMode(metaclass=_SaveMode):
        V = typing.NewType('V', builtins.int)
    ERRORIFEXISTS = Sink.SaveMode.V(0)
    OVERWRITE = Sink.SaveMode.V(1)
    APPEND = Sink.SaveMode.V(2)
    IGNORE = Sink.SaveMode.V(3)

    class BigQuerySinkConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class OptionsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...

            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

        TABLE_FIELD_NUMBER: builtins.int
        STAGING_BUCKET_FIELD_NUMBER: builtins.int
        OPTIONS_FIELD_NUMBER: builtins.int
        table: typing.Text = ...
        staging_bucket: typing.Text = ...

        @property
        def options(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...

        def __init__(self,
            *,
            table : typing.Text = ...,
            staging_bucket : typing.Text = ...,
            options : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"options",b"options",u"staging_bucket",b"staging_bucket",u"table",b"table"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    SAVE_MODE_FIELD_NUMBER: builtins.int
    BQ_CONFIG_FIELD_NUMBER: builtins.int
    type: global___Sink.SinkType.V = ...
    columns: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...
    save_mode: global___Sink.SaveMode.V = ...

    @property
    def bq_config(self) -> global___Sink.BigQuerySinkConfig: ...

    def __init__(self,
        *,
        type : global___Sink.SinkType.V = ...,
        columns : typing.Optional[typing.Iterable[typing.Text]] = ...,
        save_mode : global___Sink.SaveMode.V = ...,
        bq_config : typing.Optional[global___Sink.BigQuerySinkConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"bq_config",b"bq_config",u"config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"bq_config",b"bq_config",u"columns",b"columns",u"config",b"config",u"save_mode",b"save_mode",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"config",b"config"]) -> typing_extensions.Literal["bq_config"]: ...
global___Sink = Sink
