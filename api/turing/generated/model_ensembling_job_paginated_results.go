/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EnsemblingJobPaginatedResults struct for EnsemblingJobPaginatedResults
type EnsemblingJobPaginatedResults struct {
	Paging  *PaginationPaging `json:"paging,omitempty"`
	Results *[]EnsemblingJob  `json:"results,omitempty"`
}

// NewEnsemblingJobPaginatedResults instantiates a new EnsemblingJobPaginatedResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnsemblingJobPaginatedResults() *EnsemblingJobPaginatedResults {
	this := EnsemblingJobPaginatedResults{}
	return &this
}

// NewEnsemblingJobPaginatedResultsWithDefaults instantiates a new EnsemblingJobPaginatedResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnsemblingJobPaginatedResultsWithDefaults() *EnsemblingJobPaginatedResults {
	this := EnsemblingJobPaginatedResults{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *EnsemblingJobPaginatedResults) GetPaging() PaginationPaging {
	if o == nil || o.Paging == nil {
		var ret PaginationPaging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblingJobPaginatedResults) GetPagingOk() (*PaginationPaging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *EnsemblingJobPaginatedResults) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PaginationPaging and assigns it to the Paging field.
func (o *EnsemblingJobPaginatedResults) SetPaging(v PaginationPaging) {
	o.Paging = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *EnsemblingJobPaginatedResults) GetResults() []EnsemblingJob {
	if o == nil || o.Results == nil {
		var ret []EnsemblingJob
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblingJobPaginatedResults) GetResultsOk() (*[]EnsemblingJob, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *EnsemblingJobPaginatedResults) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []EnsemblingJob and assigns it to the Results field.
func (o *EnsemblingJobPaginatedResults) SetResults(v []EnsemblingJob) {
	o.Results = &v
}

func (o EnsemblingJobPaginatedResults) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableEnsemblingJobPaginatedResults struct {
	value *EnsemblingJobPaginatedResults
	isSet bool
}

func (v NullableEnsemblingJobPaginatedResults) Get() *EnsemblingJobPaginatedResults {
	return v.value
}

func (v *NullableEnsemblingJobPaginatedResults) Set(val *EnsemblingJobPaginatedResults) {
	v.value = val
	v.isSet = true
}

func (v NullableEnsemblingJobPaginatedResults) IsSet() bool {
	return v.isSet
}

func (v *NullableEnsemblingJobPaginatedResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnsemblingJobPaginatedResults(val *EnsemblingJobPaginatedResults) *NullableEnsemblingJobPaginatedResults {
	return &NullableEnsemblingJobPaginatedResults{value: val, isSet: true}
}

func (v NullableEnsemblingJobPaginatedResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnsemblingJobPaginatedResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
