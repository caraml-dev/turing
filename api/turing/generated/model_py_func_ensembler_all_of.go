/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PyFuncEnsemblerAllOf struct for PyFuncEnsemblerAllOf
type PyFuncEnsemblerAllOf struct {
	MlflowUrl          *string `json:"mlflow_url,omitempty"`
	MlflowExperimentId *int32  `json:"mlflow_experiment_id,omitempty"`
	MlflowRunId        *string `json:"mlflow_run_id,omitempty"`
	ArtifactUri        *string `json:"artifact_uri,omitempty"`
}

// NewPyFuncEnsemblerAllOf instantiates a new PyFuncEnsemblerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPyFuncEnsemblerAllOf() *PyFuncEnsemblerAllOf {
	this := PyFuncEnsemblerAllOf{}
	return &this
}

// NewPyFuncEnsemblerAllOfWithDefaults instantiates a new PyFuncEnsemblerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPyFuncEnsemblerAllOfWithDefaults() *PyFuncEnsemblerAllOf {
	this := PyFuncEnsemblerAllOf{}
	return &this
}

// GetMlflowUrl returns the MlflowUrl field value if set, zero value otherwise.
func (o *PyFuncEnsemblerAllOf) GetMlflowUrl() string {
	if o == nil || o.MlflowUrl == nil {
		var ret string
		return ret
	}
	return *o.MlflowUrl
}

// GetMlflowUrlOk returns a tuple with the MlflowUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsemblerAllOf) GetMlflowUrlOk() (*string, bool) {
	if o == nil || o.MlflowUrl == nil {
		return nil, false
	}
	return o.MlflowUrl, true
}

// HasMlflowUrl returns a boolean if a field has been set.
func (o *PyFuncEnsemblerAllOf) HasMlflowUrl() bool {
	if o != nil && o.MlflowUrl != nil {
		return true
	}

	return false
}

// SetMlflowUrl gets a reference to the given string and assigns it to the MlflowUrl field.
func (o *PyFuncEnsemblerAllOf) SetMlflowUrl(v string) {
	o.MlflowUrl = &v
}

// GetMlflowExperimentId returns the MlflowExperimentId field value if set, zero value otherwise.
func (o *PyFuncEnsemblerAllOf) GetMlflowExperimentId() int32 {
	if o == nil || o.MlflowExperimentId == nil {
		var ret int32
		return ret
	}
	return *o.MlflowExperimentId
}

// GetMlflowExperimentIdOk returns a tuple with the MlflowExperimentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsemblerAllOf) GetMlflowExperimentIdOk() (*int32, bool) {
	if o == nil || o.MlflowExperimentId == nil {
		return nil, false
	}
	return o.MlflowExperimentId, true
}

// HasMlflowExperimentId returns a boolean if a field has been set.
func (o *PyFuncEnsemblerAllOf) HasMlflowExperimentId() bool {
	if o != nil && o.MlflowExperimentId != nil {
		return true
	}

	return false
}

// SetMlflowExperimentId gets a reference to the given int32 and assigns it to the MlflowExperimentId field.
func (o *PyFuncEnsemblerAllOf) SetMlflowExperimentId(v int32) {
	o.MlflowExperimentId = &v
}

// GetMlflowRunId returns the MlflowRunId field value if set, zero value otherwise.
func (o *PyFuncEnsemblerAllOf) GetMlflowRunId() string {
	if o == nil || o.MlflowRunId == nil {
		var ret string
		return ret
	}
	return *o.MlflowRunId
}

// GetMlflowRunIdOk returns a tuple with the MlflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsemblerAllOf) GetMlflowRunIdOk() (*string, bool) {
	if o == nil || o.MlflowRunId == nil {
		return nil, false
	}
	return o.MlflowRunId, true
}

// HasMlflowRunId returns a boolean if a field has been set.
func (o *PyFuncEnsemblerAllOf) HasMlflowRunId() bool {
	if o != nil && o.MlflowRunId != nil {
		return true
	}

	return false
}

// SetMlflowRunId gets a reference to the given string and assigns it to the MlflowRunId field.
func (o *PyFuncEnsemblerAllOf) SetMlflowRunId(v string) {
	o.MlflowRunId = &v
}

// GetArtifactUri returns the ArtifactUri field value if set, zero value otherwise.
func (o *PyFuncEnsemblerAllOf) GetArtifactUri() string {
	if o == nil || o.ArtifactUri == nil {
		var ret string
		return ret
	}
	return *o.ArtifactUri
}

// GetArtifactUriOk returns a tuple with the ArtifactUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsemblerAllOf) GetArtifactUriOk() (*string, bool) {
	if o == nil || o.ArtifactUri == nil {
		return nil, false
	}
	return o.ArtifactUri, true
}

// HasArtifactUri returns a boolean if a field has been set.
func (o *PyFuncEnsemblerAllOf) HasArtifactUri() bool {
	if o != nil && o.ArtifactUri != nil {
		return true
	}

	return false
}

// SetArtifactUri gets a reference to the given string and assigns it to the ArtifactUri field.
func (o *PyFuncEnsemblerAllOf) SetArtifactUri(v string) {
	o.ArtifactUri = &v
}

func (o PyFuncEnsemblerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MlflowUrl != nil {
		toSerialize["mlflow_url"] = o.MlflowUrl
	}
	if o.MlflowExperimentId != nil {
		toSerialize["mlflow_experiment_id"] = o.MlflowExperimentId
	}
	if o.MlflowRunId != nil {
		toSerialize["mlflow_run_id"] = o.MlflowRunId
	}
	if o.ArtifactUri != nil {
		toSerialize["artifact_uri"] = o.ArtifactUri
	}
	return json.Marshal(toSerialize)
}

type NullablePyFuncEnsemblerAllOf struct {
	value *PyFuncEnsemblerAllOf
	isSet bool
}

func (v NullablePyFuncEnsemblerAllOf) Get() *PyFuncEnsemblerAllOf {
	return v.value
}

func (v *NullablePyFuncEnsemblerAllOf) Set(val *PyFuncEnsemblerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePyFuncEnsemblerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePyFuncEnsemblerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePyFuncEnsemblerAllOf(val *PyFuncEnsemblerAllOf) *NullablePyFuncEnsemblerAllOf {
	return &NullablePyFuncEnsemblerAllOf{value: val, isSet: true}
}

func (v NullablePyFuncEnsemblerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePyFuncEnsemblerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
