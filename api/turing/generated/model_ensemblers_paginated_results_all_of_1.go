/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EnsemblersPaginatedResultsAllOf1 struct for EnsemblersPaginatedResultsAllOf1
type EnsemblersPaginatedResultsAllOf1 struct {
	Results *[]GenericEnsembler `json:"results,omitempty"`
}

// NewEnsemblersPaginatedResultsAllOf1 instantiates a new EnsemblersPaginatedResultsAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnsemblersPaginatedResultsAllOf1() *EnsemblersPaginatedResultsAllOf1 {
	this := EnsemblersPaginatedResultsAllOf1{}
	return &this
}

// NewEnsemblersPaginatedResultsAllOf1WithDefaults instantiates a new EnsemblersPaginatedResultsAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnsemblersPaginatedResultsAllOf1WithDefaults() *EnsemblersPaginatedResultsAllOf1 {
	this := EnsemblersPaginatedResultsAllOf1{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *EnsemblersPaginatedResultsAllOf1) GetResults() []GenericEnsembler {
	if o == nil || o.Results == nil {
		var ret []GenericEnsembler
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnsemblersPaginatedResultsAllOf1) GetResultsOk() (*[]GenericEnsembler, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *EnsemblersPaginatedResultsAllOf1) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []GenericEnsembler and assigns it to the Results field.
func (o *EnsemblersPaginatedResultsAllOf1) SetResults(v []GenericEnsembler) {
	o.Results = &v
}

func (o EnsemblersPaginatedResultsAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableEnsemblersPaginatedResultsAllOf1 struct {
	value *EnsemblersPaginatedResultsAllOf1
	isSet bool
}

func (v NullableEnsemblersPaginatedResultsAllOf1) Get() *EnsemblersPaginatedResultsAllOf1 {
	return v.value
}

func (v *NullableEnsemblersPaginatedResultsAllOf1) Set(val *EnsemblersPaginatedResultsAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableEnsemblersPaginatedResultsAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableEnsemblersPaginatedResultsAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnsemblersPaginatedResultsAllOf1(val *EnsemblersPaginatedResultsAllOf1) *NullableEnsemblersPaginatedResultsAllOf1 {
	return &NullableEnsemblersPaginatedResultsAllOf1{value: val, isSet: true}
}

func (v NullableEnsemblersPaginatedResultsAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnsemblersPaginatedResultsAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
