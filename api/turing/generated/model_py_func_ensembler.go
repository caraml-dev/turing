/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PyFuncEnsembler struct for PyFuncEnsembler
type PyFuncEnsembler struct {
	Id                 *int32        `json:"id,omitempty"`
	ProjectId          *int32        `json:"project_id,omitempty"`
	Type               EnsemblerType `json:"type"`
	Name               *string       `json:"name,omitempty"`
	CreatedAt          *time.Time    `json:"created_at,omitempty"`
	UpdatedAt          *time.Time    `json:"updated_at,omitempty"`
	MlflowUrl          *string       `json:"mlflow_url,omitempty"`
	MlflowExperimentId *int32        `json:"mlflow_experiment_id,omitempty"`
	MlflowRunId        *string       `json:"mlflow_run_id,omitempty"`
	ArtifactUri        *string       `json:"artifact_uri,omitempty"`
}

// NewPyFuncEnsembler instantiates a new PyFuncEnsembler object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPyFuncEnsembler(type_ EnsemblerType) *PyFuncEnsembler {
	this := PyFuncEnsembler{}
	this.Type = type_
	return &this
}

// NewPyFuncEnsemblerWithDefaults instantiates a new PyFuncEnsembler object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPyFuncEnsemblerWithDefaults() *PyFuncEnsembler {
	this := PyFuncEnsembler{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PyFuncEnsembler) SetId(v int32) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *PyFuncEnsembler) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetType returns the Type field value
func (o *PyFuncEnsembler) GetType() EnsemblerType {
	if o == nil {
		var ret EnsemblerType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetTypeOk() (*EnsemblerType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PyFuncEnsembler) SetType(v EnsemblerType) {
	o.Type = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PyFuncEnsembler) SetName(v string) {
	o.Name = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PyFuncEnsembler) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PyFuncEnsembler) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetMlflowUrl returns the MlflowUrl field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetMlflowUrl() string {
	if o == nil || o.MlflowUrl == nil {
		var ret string
		return ret
	}
	return *o.MlflowUrl
}

// GetMlflowUrlOk returns a tuple with the MlflowUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetMlflowUrlOk() (*string, bool) {
	if o == nil || o.MlflowUrl == nil {
		return nil, false
	}
	return o.MlflowUrl, true
}

// HasMlflowUrl returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasMlflowUrl() bool {
	if o != nil && o.MlflowUrl != nil {
		return true
	}

	return false
}

// SetMlflowUrl gets a reference to the given string and assigns it to the MlflowUrl field.
func (o *PyFuncEnsembler) SetMlflowUrl(v string) {
	o.MlflowUrl = &v
}

// GetMlflowExperimentId returns the MlflowExperimentId field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetMlflowExperimentId() int32 {
	if o == nil || o.MlflowExperimentId == nil {
		var ret int32
		return ret
	}
	return *o.MlflowExperimentId
}

// GetMlflowExperimentIdOk returns a tuple with the MlflowExperimentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetMlflowExperimentIdOk() (*int32, bool) {
	if o == nil || o.MlflowExperimentId == nil {
		return nil, false
	}
	return o.MlflowExperimentId, true
}

// HasMlflowExperimentId returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasMlflowExperimentId() bool {
	if o != nil && o.MlflowExperimentId != nil {
		return true
	}

	return false
}

// SetMlflowExperimentId gets a reference to the given int32 and assigns it to the MlflowExperimentId field.
func (o *PyFuncEnsembler) SetMlflowExperimentId(v int32) {
	o.MlflowExperimentId = &v
}

// GetMlflowRunId returns the MlflowRunId field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetMlflowRunId() string {
	if o == nil || o.MlflowRunId == nil {
		var ret string
		return ret
	}
	return *o.MlflowRunId
}

// GetMlflowRunIdOk returns a tuple with the MlflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetMlflowRunIdOk() (*string, bool) {
	if o == nil || o.MlflowRunId == nil {
		return nil, false
	}
	return o.MlflowRunId, true
}

// HasMlflowRunId returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasMlflowRunId() bool {
	if o != nil && o.MlflowRunId != nil {
		return true
	}

	return false
}

// SetMlflowRunId gets a reference to the given string and assigns it to the MlflowRunId field.
func (o *PyFuncEnsembler) SetMlflowRunId(v string) {
	o.MlflowRunId = &v
}

// GetArtifactUri returns the ArtifactUri field value if set, zero value otherwise.
func (o *PyFuncEnsembler) GetArtifactUri() string {
	if o == nil || o.ArtifactUri == nil {
		var ret string
		return ret
	}
	return *o.ArtifactUri
}

// GetArtifactUriOk returns a tuple with the ArtifactUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PyFuncEnsembler) GetArtifactUriOk() (*string, bool) {
	if o == nil || o.ArtifactUri == nil {
		return nil, false
	}
	return o.ArtifactUri, true
}

// HasArtifactUri returns a boolean if a field has been set.
func (o *PyFuncEnsembler) HasArtifactUri() bool {
	if o != nil && o.ArtifactUri != nil {
		return true
	}

	return false
}

// SetArtifactUri gets a reference to the given string and assigns it to the ArtifactUri field.
func (o *PyFuncEnsembler) SetArtifactUri(v string) {
	o.ArtifactUri = &v
}

func (o PyFuncEnsembler) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.MlflowUrl != nil {
		toSerialize["mlflow_url"] = o.MlflowUrl
	}
	if o.MlflowExperimentId != nil {
		toSerialize["mlflow_experiment_id"] = o.MlflowExperimentId
	}
	if o.MlflowRunId != nil {
		toSerialize["mlflow_run_id"] = o.MlflowRunId
	}
	if o.ArtifactUri != nil {
		toSerialize["artifact_uri"] = o.ArtifactUri
	}
	return json.Marshal(toSerialize)
}

type NullablePyFuncEnsembler struct {
	value *PyFuncEnsembler
	isSet bool
}

func (v NullablePyFuncEnsembler) Get() *PyFuncEnsembler {
	return v.value
}

func (v *NullablePyFuncEnsembler) Set(val *PyFuncEnsembler) {
	v.value = val
	v.isSet = true
}

func (v NullablePyFuncEnsembler) IsSet() bool {
	return v.isSet
}

func (v *NullablePyFuncEnsembler) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePyFuncEnsembler(val *PyFuncEnsembler) *NullablePyFuncEnsembler {
	return &NullablePyFuncEnsembler{value: val, isSet: true}
}

func (v NullablePyFuncEnsembler) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePyFuncEnsembler) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
