/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BigQuerySinkAllOf struct for BigQuerySinkAllOf
type BigQuerySinkAllOf struct {
	BqConfig BigQuerySinkConfig `json:"bq_config"`
}

// NewBigQuerySinkAllOf instantiates a new BigQuerySinkAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBigQuerySinkAllOf(bqConfig BigQuerySinkConfig) *BigQuerySinkAllOf {
	this := BigQuerySinkAllOf{}
	this.BqConfig = bqConfig
	return &this
}

// NewBigQuerySinkAllOfWithDefaults instantiates a new BigQuerySinkAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBigQuerySinkAllOfWithDefaults() *BigQuerySinkAllOf {
	this := BigQuerySinkAllOf{}
	return &this
}

// GetBqConfig returns the BqConfig field value
func (o *BigQuerySinkAllOf) GetBqConfig() BigQuerySinkConfig {
	if o == nil {
		var ret BigQuerySinkConfig
		return ret
	}

	return o.BqConfig
}

// GetBqConfigOk returns a tuple with the BqConfig field value
// and a boolean to check if the value has been set.
func (o *BigQuerySinkAllOf) GetBqConfigOk() (*BigQuerySinkConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BqConfig, true
}

// SetBqConfig sets field value
func (o *BigQuerySinkAllOf) SetBqConfig(v BigQuerySinkConfig) {
	o.BqConfig = v
}

func (o BigQuerySinkAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bq_config"] = o.BqConfig
	}
	return json.Marshal(toSerialize)
}

type NullableBigQuerySinkAllOf struct {
	value *BigQuerySinkAllOf
	isSet bool
}

func (v NullableBigQuerySinkAllOf) Get() *BigQuerySinkAllOf {
	return v.value
}

func (v *NullableBigQuerySinkAllOf) Set(val *BigQuerySinkAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBigQuerySinkAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBigQuerySinkAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBigQuerySinkAllOf(val *BigQuerySinkAllOf) *NullableBigQuerySinkAllOf {
	return &NullableBigQuerySinkAllOf{value: val, isSet: true}
}

func (v NullableBigQuerySinkAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBigQuerySinkAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
