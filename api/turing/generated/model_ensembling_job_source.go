/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EnsemblingJobSource struct for EnsemblingJobSource
type EnsemblingJobSource struct {
	Dataset Dataset `json:"dataset"`
	JoinOn []string `json:"join_on"`
}

// NewEnsemblingJobSource instantiates a new EnsemblingJobSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnsemblingJobSource(dataset Dataset, joinOn []string) *EnsemblingJobSource {
	this := EnsemblingJobSource{}
	this.Dataset = dataset
	this.JoinOn = joinOn
	return &this
}

// NewEnsemblingJobSourceWithDefaults instantiates a new EnsemblingJobSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnsemblingJobSourceWithDefaults() *EnsemblingJobSource {
	this := EnsemblingJobSource{}
	return &this
}

// GetDataset returns the Dataset field value
func (o *EnsemblingJobSource) GetDataset() Dataset {
	if o == nil {
		var ret Dataset
		return ret
	}

	return o.Dataset
}

// GetDatasetOk returns a tuple with the Dataset field value
// and a boolean to check if the value has been set.
func (o *EnsemblingJobSource) GetDatasetOk() (*Dataset, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Dataset, true
}

// SetDataset sets field value
func (o *EnsemblingJobSource) SetDataset(v Dataset) {
	o.Dataset = v
}

// GetJoinOn returns the JoinOn field value
func (o *EnsemblingJobSource) GetJoinOn() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.JoinOn
}

// GetJoinOnOk returns a tuple with the JoinOn field value
// and a boolean to check if the value has been set.
func (o *EnsemblingJobSource) GetJoinOnOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.JoinOn, true
}

// SetJoinOn sets field value
func (o *EnsemblingJobSource) SetJoinOn(v []string) {
	o.JoinOn = v
}

func (o EnsemblingJobSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dataset"] = o.Dataset
	}
	if true {
		toSerialize["join_on"] = o.JoinOn
	}
	return json.Marshal(toSerialize)
}

type NullableEnsemblingJobSource struct {
	value *EnsemblingJobSource
	isSet bool
}

func (v NullableEnsemblingJobSource) Get() *EnsemblingJobSource {
	return v.value
}

func (v *NullableEnsemblingJobSource) Set(val *EnsemblingJobSource) {
	v.value = val
	v.isSet = true
}

func (v NullableEnsemblingJobSource) IsSet() bool {
	return v.isSet
}

func (v *NullableEnsemblingJobSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnsemblingJobSource(val *EnsemblingJobSource) *NullableEnsemblingJobSource {
	return &NullableEnsemblingJobSource{value: val, isSet: true}
}

func (v NullableEnsemblingJobSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnsemblingJobSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


