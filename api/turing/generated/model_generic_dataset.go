/*
 * Turing Minimal Openapi Spec for SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenericDataset struct for GenericDataset
type GenericDataset struct {
	Type DatasetType `json:"type"`
}

// NewGenericDataset instantiates a new GenericDataset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericDataset(type_ DatasetType) *GenericDataset {
	this := GenericDataset{}
	this.Type = type_
	return &this
}

// NewGenericDatasetWithDefaults instantiates a new GenericDataset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericDatasetWithDefaults() *GenericDataset {
	this := GenericDataset{}
	return &this
}

// GetType returns the Type field value
func (o *GenericDataset) GetType() DatasetType {
	if o == nil {
		var ret DatasetType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GenericDataset) GetTypeOk() (*DatasetType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GenericDataset) SetType(v DatasetType) {
	o.Type = v
}

func (o GenericDataset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableGenericDataset struct {
	value *GenericDataset
	isSet bool
}

func (v NullableGenericDataset) Get() *GenericDataset {
	return v.value
}

func (v *NullableGenericDataset) Set(val *GenericDataset) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericDataset) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericDataset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericDataset(val *GenericDataset) *NullableGenericDataset {
	return &NullableGenericDataset{value: val, isSet: true}
}

func (v NullableGenericDataset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericDataset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
