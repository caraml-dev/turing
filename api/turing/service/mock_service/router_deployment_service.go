// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/user/Documents/Code/github/test_refactoring/turing/api/turing/service/router_deployment_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	models "github.com/caraml-dev/turing/api/turing/models"
	client "github.com/gojek/mlp/api/client"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRouterDeploymentService is a mock of RouterDeploymentService interface
type MockRouterDeploymentService struct {
	ctrl     *gomock.Controller
	recorder *MockRouterDeploymentServiceMockRecorder
}

// MockRouterDeploymentServiceMockRecorder is the mock recorder for MockRouterDeploymentService
type MockRouterDeploymentServiceMockRecorder struct {
	mock *MockRouterDeploymentService
}

// NewMockRouterDeploymentService creates a new mock instance
func NewMockRouterDeploymentService(ctrl *gomock.Controller) *MockRouterDeploymentService {
	mock := &MockRouterDeploymentService{ctrl: ctrl}
	mock.recorder = &MockRouterDeploymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRouterDeploymentService) EXPECT() *MockRouterDeploymentServiceMockRecorder {
	return m.recorder
}

// DeployOrRollbackRouter mocks base method
func (m *MockRouterDeploymentService) DeployOrRollbackRouter(project *client.Project, router *models.Router, routerVersion *models.RouterVersion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeployOrRollbackRouter", project, router, routerVersion)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeployOrRollbackRouter indicates an expected call of DeployOrRollbackRouter
func (mr *MockRouterDeploymentServiceMockRecorder) DeployOrRollbackRouter(project, router, routerVersion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeployOrRollbackRouter", reflect.TypeOf((*MockRouterDeploymentService)(nil).DeployOrRollbackRouter), project, router, routerVersion)
}

// UndeployRouter mocks base method
func (m *MockRouterDeploymentService) UndeployRouter(project *client.Project, router *models.Router) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UndeployRouter", project, router)
	ret0, _ := ret[0].(error)
	return ret0
}

// UndeployRouter indicates an expected call of UndeployRouter
func (mr *MockRouterDeploymentServiceMockRecorder) UndeployRouter(project, router interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UndeployRouter", reflect.TypeOf((*MockRouterDeploymentService)(nil).UndeployRouter), project, router)
}
