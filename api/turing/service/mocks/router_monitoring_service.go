// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "github.com/caraml-dev/turing/api/turing/models"
	mock "github.com/stretchr/testify/mock"
)

// RouterMonitoringService is an autogenerated mock type for the RouterMonitoringService type
type RouterMonitoringService struct {
	mock.Mock
}

// GenerateMonitoringURL provides a mock function with given fields: projectID, environmentName, routerName, routerVersion
func (_m *RouterMonitoringService) GenerateMonitoringURL(projectID models.ID, environmentName string, routerName string, routerVersion *uint) (string, error) {
	ret := _m.Called(projectID, environmentName, routerName, routerVersion)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(models.ID, string, string, *uint) (string, error)); ok {
		return rf(projectID, environmentName, routerName, routerVersion)
	}
	if rf, ok := ret.Get(0).(func(models.ID, string, string, *uint) string); ok {
		r0 = rf(projectID, environmentName, routerName, routerVersion)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(models.ID, string, string, *uint) error); ok {
		r1 = rf(projectID, environmentName, routerName, routerVersion)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRouterMonitoringService interface {
	mock.TestingT
	Cleanup(func())
}

// NewRouterMonitoringService creates a new instance of RouterMonitoringService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRouterMonitoringService(t mockConstructorTestingTNewRouterMonitoringService) *RouterMonitoringService {
	mock := &RouterMonitoringService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
