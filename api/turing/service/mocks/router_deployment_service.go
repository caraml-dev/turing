// Code generated by mockery v2.1.0. DO NOT EDIT.

package mocks

import (
	json "encoding/json"

	client "github.com/gojek/mlp/client"

	merlin_apiclient "github.com/gojek/merlin/client"

	mock "github.com/stretchr/testify/mock"

	models "github.com/gojek/turing/api/turing/models"

	utils "github.com/gojek/turing/api/turing/utils"
)

// DeploymentService is an autogenerated mock type for the DeploymentService type
type DeploymentService struct {
	mock.Mock
}

// DeleteRouterEndpoint provides a mock function with given fields: project, environment, routerVersion
func (_m *DeploymentService) DeleteRouterEndpoint(project *client.Project, environment *merlin_apiclient.Environment, routerVersion *models.RouterVersion) error {
	ret := _m.Called(project, environment, routerVersion)

	var r0 error
	if rf, ok := ret.Get(0).(func(*client.Project, *merlin_apiclient.Environment, *models.RouterVersion) error); ok {
		r0 = rf(project, environment, routerVersion)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeployRouterVersion provides a mock function with given fields: project, environment, routerVersion, routerServiceAccountKey, enricherServiceAccountKey, ensemblerServiceAccountKey, experimentConfig, experimentPasskey, eventsCh
func (_m *DeploymentService) DeployRouterVersion(project *client.Project, environment *merlin_apiclient.Environment, routerVersion *models.RouterVersion, routerServiceAccountKey string, enricherServiceAccountKey string, ensemblerServiceAccountKey string, experimentConfig json.RawMessage, experimentPasskey string, eventsCh *utils.EventChannel) (string, error) {
	ret := _m.Called(project, environment, routerVersion, routerServiceAccountKey, enricherServiceAccountKey, ensemblerServiceAccountKey, experimentConfig, experimentPasskey, eventsCh)

	var r0 string
	if rf, ok := ret.Get(0).(func(*client.Project, *merlin_apiclient.Environment, *models.RouterVersion, string, string, string, json.RawMessage, string, *utils.EventChannel) string); ok {
		r0 = rf(project, environment, routerVersion, routerServiceAccountKey, enricherServiceAccountKey, ensemblerServiceAccountKey, experimentConfig, experimentPasskey, eventsCh)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*client.Project, *merlin_apiclient.Environment, *models.RouterVersion, string, string, string, json.RawMessage, string, *utils.EventChannel) error); ok {
		r1 = rf(project, environment, routerVersion, routerServiceAccountKey, enricherServiceAccountKey, ensemblerServiceAccountKey, experimentConfig, experimentPasskey, eventsCh)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UndeployRouterVersion provides a mock function with given fields: project, environment, routerVersion, eventsCh
func (_m *DeploymentService) UndeployRouterVersion(project *client.Project, environment *merlin_apiclient.Environment, routerVersion *models.RouterVersion, eventsCh *utils.EventChannel) error {
	ret := _m.Called(project, environment, routerVersion, eventsCh)

	var r0 error
	if rf, ok := ret.Get(0).(func(*client.Project, *merlin_apiclient.Environment, *models.RouterVersion, *utils.EventChannel) error); ok {
		r0 = rf(project, environment, routerVersion, eventsCh)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
