openapi: 3.0.3
info:
  title: Endpoints and schemas of Turing ensembling jobs
  version: 0.0.1

.tags: &tags
  - "Ensembling Job"

paths:
  "/projects/{project_id}/jobs":
    post:
      tags: *tags
      operationId: "CreateEnsemblingJob"
      summary: Submit an Ensembling job.
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      requestBody:
        description: A JSON object containing information about the ensembler.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnsemblingJob"
      responses:
        "202":
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnsemblingJob"
    get:
      tags: *tags
      operationId: "ListEnsemblingJobs"
      summary: Returns a list of ensembling jobs that belong to the project
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: A JSON object, that represents paginated results response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnsemblingJobPaginatedResults"

  "/projects/{project_id}/jobs/{id}":
    get:
      tags: *tags
      operationId: "GetEnsemblingJob"
      summary: Get an existing Ensembling job.
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
        - in: path
          name: id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      responses:
        "200":
          description: A JSON object representing an Ensembling Job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnsemblingJob"

components:
  schemas:
    Id:
      $ref: "common.yaml#/components/schemas/Id"

    EnsemblingJob:
      description: A JSON object that represents an ensembling job for batch experiment use cases
      properties:
        id:
          $ref: "#/components/schemas/Id"
        name:
          type: "string"
          minLength: 3
          maxLength: 50
        project_id:
          $ref: "#/components/schemas/Id"
        ensembler_id:
          $ref: "#/components/schemas/Id"
        environment_name:
          type: "string"
        infra_config:
          $ref: "#/components/schemas/EnsemblerInfraConfig"
        job_config:
          $ref: "#/components/schemas/EnsemblerConfig"
        status:
          $ref: "#/components/schemas/EnsemblerJobStatus"
        error:
          type: "string"
        created_at:
          type: "string"
          format: "date-time"
        updated_at:
          type: "string"
          format: "date-time"

    EnsemblerConfig:
      type: "object"
      properties:
        version:
          type: string
        kind:
          $ref: "#/components/schemas/EnsemblerConfigKind"
        metadata:
          $ref: "#/components/schemas/EnsemblingJobMeta"
        spec:
          $ref: "#/components/schemas/EnsemblingJobSpec"

    EnsemblerConfigKind:
      type: "string"
      enum:
        - BatchEnsemblingJob

    EnsemblingJobMeta:
      description: Ensembling job Metadata
      properties:
        name:
          type: "string"
        annotations:
          type: "object"
          additionalProperties:
            type: "string"

    EnsemblingJobSpec:
      description: Ensembling job Specification
      properties:
        source:
          $ref: "#/components/schemas/EnsemblingJobSource"
        predictions:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/EnsemblingJobPredictionSource"
        ensembler:
          $ref: "#/components/schemas/EnsemblingJobEnsemblerSpec"
        sink:
          $ref: "#/components/schemas/EnsemblingJobSink"

    EnsemblingJobSource:
      type: "object"
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
        join_on:
          type: "array"
          items:
            type: "string"

    Dataset:
      type: "object"
      oneOf:
        - $ref: "#/components/schemas/BigQueryDataset"
      required:
        - "type"
      properties:
        type:
          $ref: "#/components/schemas/DatasetType"
      discriminator:
        propertyName: "type"
        mapping:
          BQ: "#/components/schemas/BigQueryDataset"

    DatasetType:
      type: "string"
      enum:
        - "BQ"

    BigQueryDataset:
      allOf:
        - type: object
          properties:
            bq_config:
              $ref: "#/components/schemas/BigQueryDatasetConfig"

    BigQueryDatasetConfig:
      properties:
        table:
          type: "string"
          pattern: '^[a-z][a-z0-9-]+\.\w+([_]?\w)+\.\w+([_]?\w)+$'
        features:
          type: "array"
          items:
            type: "string"
        query:
          type: "string"
        options:
          type: "object"
          additionalProperties:
            type: "string"

    EnsemblingJobPredictionSource:
      type: "object"
      allOf:
        - $ref: "#/components/schemas/EnsemblingJobSource"
        - type: "object"
          properties:
            columns:
              type: "array"
              items:
                type: "string"

    EnsemblingJobEnsemblerSpec:
      type: "object"
      properties:
        uri:
          type: "string"
          format: "uri"
        result:
          type: "object"
          properties:
            type:
              $ref: "#/components/schemas/EnsemblingJobResultType"
            item_type:
              $ref: "#/components/schemas/EnsemblingJobResultType"
            column_name:
              type: "string"

    EnsemblingJobResultType:
      type: "string"
      enum:
        - DOUBLE
        - FLOAT
        - INTEGER
        - LONG
        - STRING
        - ARRAY

    EnsemblingJobSink:
      type: "object"
      oneOf:
        - $ref: "#/components/schemas/BigQuerySink"
      properties:
        type:
          $ref: "#/components/schemas/SinkType"
        columns:
          type: "array"
          items:
            type: "string"
        save_mode:
          $ref: "#/components/schemas/SaveMode"
      discriminator:
        propertyName: "type"
        mapping:
          BQ: "#/components/schemas/BigQuerySink"

    BigQuerySink:
      allOf:
        - type: object
          properties:
            bq_config:
              $ref: "#/components/schemas/BigQuerySinkConfig"

    BigQuerySinkConfig:
      type: "object"
      properties:
        table:
          type: string
        staging_bucket:
          type: string
        options:
          type: object
          additionalProperties:
            type: string

    SaveMode:
      type: "string"
      enum:
        - ERRORIFEXISTS
        - OVERWRITE
        - APPEND
        - IGNORE

    SinkType:
      type: "string"
      enum:
        - CONSOLE
        - BQ

    EnsemblerInfraConfig:
      type: "object"
      properties:
        artifact_uri:
          type: string
        ensembler_name:
          type: string
        service_account_name:
          type: string
        resources:
          $ref: "#/components/schemas/EnsemblingResources"

    EnsemblingResources:
      type: "object"
      properties:
        driver_cpu_request:
          type: string
        driver_memory_request:
          type: string
        executor_replica:
          type: integer
        executor_cpu_request:
          type: string
        executor_memory_request:
          type: string

    EnsemblerJobStatus:
      type: "string"
      enum:
        - pending
        - running
        - terminating
        - terminated
        - completed
        - failed
        - failed_submission
        - failed_building

    EnsemblingJobPaginatedResults:
      allOf:
        - type: object
          properties:
            paging:
              $ref: "common.yaml#/components/schemas/pagination.Paging"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/EnsemblingJob"
