paths:
  "/projects/{project_id}/ensemblers":
    get:
      tags: [ "Ensembler" ]
      operationId: "ListEnsemblers"
      summary: Returns a list of ensemblers that belong to the project
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 10
        - in: query
          name: type
          schema:
            $ref: "#/components/schemas/EnsemblerType"
      responses:
        "200":
          description: A JSON object, that represents paginated results response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnsemblersPaginatedResults"
    post:
      tags: [ "Ensembler" ]
      operationId: "CreateEnsembler"
      summary: Saves a user-defined ensembler into the project
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      requestBody:
        description: A JSON object containing information about the ensembler
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ensembler"
      responses:
        "201":
          description: A JSON representation of a successfully saved ensembler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ensembler"

  "/projects/{project_id}/ensemblers/{ensembler_id}":
    get:
      tags: [ "Ensembler" ]
      operationId: "GetEnsemblerDetails"
      summary: Returns Ensembler's details by its ID
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
        - in: path
          name: ensembler_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      responses:
        "200":
          description: A JSON object representing an instance of the specific type of Ensembler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ensembler"
    put:
      tags: [ "Ensembler" ]
      operationId: "UpdateEnsembler"
      summary: Updates existing Ensembler with the data provided in the payload
      parameters:
        - in: path
          name: project_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
        - in: path
          name: ensembler_id
          schema:
            $ref: "#/components/schemas/Id"
          required: true
      requestBody:
        description: A JSON object, representing an update to the ensembler
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ensembler"
      responses:
        "200":
          description: A JSON object representing an instance of updated Ensembler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ensembler"

components:
  schemas:
    Id:
      $ref: "openapi-batch.yaml#/components/schemas/Id"
    EnsemblerType: &EnsemblerType
      type: "string"
      enum:
        - pyfunc
    Ensembler:
      type: object
      properties:
        type:
          <<: *EnsemblerType
      discriminator:
        propertyName: type
        mapping:
          'pyfunc': '#/components/schemas/PyFuncEnsembler'
    GenericEnsembler:
      properties:
        id:
          $ref: "openapi-batch.yaml#/components/schemas/Id"
        project_id:
          $ref: "openapi-batch.yaml#/components/schemas/Id"
        type:
          <<: *EnsemblerType
        name:
          type: "string"
          minLength: 3
          maxLength: 50
        created_at:
          type: "string"
          format: "date-time"
        updated_at:
          type: "string"
          format: "date-time"
    PyFuncEnsembler:
      allOf:
        - $ref: "#/components/schemas/GenericEnsembler"
        - type: "object"
          properties:
            mlflow_url:
              type: "string"
              format: "uri"
            mlflow_experiment_id:
              $ref: "openapi-batch.yaml#/components/schemas/Id"
            mlflow_run_id:
              type: "string"
            artifact_uri:
              type: "string"
              format: "uri"

    EnsemblersPaginatedResults:
      allOf:
        - $ref: "openapi-batch.yaml#/components/schemas/PaginatedResults"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/GenericEnsembler"